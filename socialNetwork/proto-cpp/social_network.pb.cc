// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: social_network.proto

#include "social_network.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace social_network_grpc {
constexpr TextRequest_CarrierEntry_DoNotUse::TextRequest_CarrierEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct TextRequest_CarrierEntry_DoNotUseDefaultTypeInternal {
  constexpr TextRequest_CarrierEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TextRequest_CarrierEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TextRequest_CarrierEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TextRequest_CarrierEntry_DoNotUseDefaultTypeInternal _TextRequest_CarrierEntry_DoNotUse_default_instance_;
constexpr TextRequest::TextRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : carrier_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , text_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , req_id_(int64_t{0}){}
struct TextRequestDefaultTypeInternal {
  constexpr TextRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TextRequestDefaultTypeInternal() {}
  union {
    TextRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TextRequestDefaultTypeInternal _TextRequest_default_instance_;
constexpr UserMention::UserMention(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : username_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , user_id_(int64_t{0}){}
struct UserMentionDefaultTypeInternal {
  constexpr UserMentionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UserMentionDefaultTypeInternal() {}
  union {
    UserMention _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UserMentionDefaultTypeInternal _UserMention_default_instance_;
constexpr Url::Url(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : shortened_url_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , expanded_url_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct UrlDefaultTypeInternal {
  constexpr UrlDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UrlDefaultTypeInternal() {}
  union {
    Url _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UrlDefaultTypeInternal _Url_default_instance_;
constexpr TextResult::TextResult(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : user_mentions_()
  , urls_()
  , text_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct TextResultDefaultTypeInternal {
  constexpr TextResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TextResultDefaultTypeInternal() {}
  union {
    TextResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TextResultDefaultTypeInternal _TextResult_default_instance_;
}  // namespace social_network_grpc
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_social_5fnetwork_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_social_5fnetwork_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_social_5fnetwork_2eproto = nullptr;

const uint32_t TableStruct_social_5fnetwork_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::social_network_grpc::TextRequest_CarrierEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::social_network_grpc::TextRequest_CarrierEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::social_network_grpc::TextRequest_CarrierEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::social_network_grpc::TextRequest_CarrierEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::social_network_grpc::TextRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::social_network_grpc::TextRequest, req_id_),
  PROTOBUF_FIELD_OFFSET(::social_network_grpc::TextRequest, text_),
  PROTOBUF_FIELD_OFFSET(::social_network_grpc::TextRequest, carrier_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::social_network_grpc::UserMention, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::social_network_grpc::UserMention, user_id_),
  PROTOBUF_FIELD_OFFSET(::social_network_grpc::UserMention, username_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::social_network_grpc::Url, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::social_network_grpc::Url, shortened_url_),
  PROTOBUF_FIELD_OFFSET(::social_network_grpc::Url, expanded_url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::social_network_grpc::TextResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::social_network_grpc::TextResult, text_),
  PROTOBUF_FIELD_OFFSET(::social_network_grpc::TextResult, user_mentions_),
  PROTOBUF_FIELD_OFFSET(::social_network_grpc::TextResult, urls_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::social_network_grpc::TextRequest_CarrierEntry_DoNotUse)},
  { 10, -1, -1, sizeof(::social_network_grpc::TextRequest)},
  { 19, -1, -1, sizeof(::social_network_grpc::UserMention)},
  { 27, -1, -1, sizeof(::social_network_grpc::Url)},
  { 35, -1, -1, sizeof(::social_network_grpc::TextResult)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::social_network_grpc::_TextRequest_CarrierEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::social_network_grpc::_TextRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::social_network_grpc::_UserMention_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::social_network_grpc::_Url_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::social_network_grpc::_TextResult_default_instance_),
};

const char descriptor_table_protodef_social_5fnetwork_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024social_network.proto\022\023social_network_g"
  "rpc\"\233\001\n\013TextRequest\022\016\n\006req_id\030\001 \001(\003\022\014\n\004t"
  "ext\030\002 \001(\t\022>\n\007carrier\030\003 \003(\0132-.social_netw"
  "ork_grpc.TextRequest.CarrierEntry\032.\n\014Car"
  "rierEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028"
  "\001\"0\n\013UserMention\022\017\n\007user_id\030\001 \001(\003\022\020\n\010use"
  "rname\030\002 \001(\t\"2\n\003Url\022\025\n\rshortened_url\030\001 \001("
  "\t\022\024\n\014expanded_url\030\002 \001(\t\"{\n\nTextResult\022\014\n"
  "\004text\030\001 \001(\t\0227\n\ruser_mentions\030\002 \003(\0132 .soc"
  "ial_network_grpc.UserMention\022&\n\004urls\030\003 \003"
  "(\0132\030.social_network_grpc.Url2_\n\013TextServ"
  "ice\022P\n\013ComposeText\022 .social_network_grpc"
  ".TextRequest\032\037.social_network_grpc.TextR"
  "esultb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_social_5fnetwork_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_social_5fnetwork_2eproto = {
  false, false, 533, descriptor_table_protodef_social_5fnetwork_2eproto, "social_network.proto", 
  &descriptor_table_social_5fnetwork_2eproto_once, nullptr, 0, 5,
  schemas, file_default_instances, TableStruct_social_5fnetwork_2eproto::offsets,
  file_level_metadata_social_5fnetwork_2eproto, file_level_enum_descriptors_social_5fnetwork_2eproto, file_level_service_descriptors_social_5fnetwork_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_social_5fnetwork_2eproto_getter() {
  return &descriptor_table_social_5fnetwork_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_social_5fnetwork_2eproto(&descriptor_table_social_5fnetwork_2eproto);
namespace social_network_grpc {

// ===================================================================

TextRequest_CarrierEntry_DoNotUse::TextRequest_CarrierEntry_DoNotUse() {}
TextRequest_CarrierEntry_DoNotUse::TextRequest_CarrierEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TextRequest_CarrierEntry_DoNotUse::MergeFrom(const TextRequest_CarrierEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TextRequest_CarrierEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_social_5fnetwork_2eproto_getter, &descriptor_table_social_5fnetwork_2eproto_once,
      file_level_metadata_social_5fnetwork_2eproto[0]);
}

// ===================================================================

class TextRequest::_Internal {
 public:
};

TextRequest::TextRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  carrier_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:social_network_grpc.TextRequest)
}
TextRequest::TextRequest(const TextRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  carrier_.MergeFrom(from.carrier_);
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    text_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text().empty()) {
    text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_text(), 
      GetArenaForAllocation());
  }
  req_id_ = from.req_id_;
  // @@protoc_insertion_point(copy_constructor:social_network_grpc.TextRequest)
}

inline void TextRequest::SharedCtor() {
text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  text_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
req_id_ = int64_t{0};
}

TextRequest::~TextRequest() {
  // @@protoc_insertion_point(destructor:social_network_grpc.TextRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void TextRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  text_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TextRequest::ArenaDtor(void* object) {
  TextRequest* _this = reinterpret_cast< TextRequest* >(object);
  (void)_this;
  _this->carrier_. ~MapField();
}
inline void TextRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &TextRequest::ArenaDtor);
  }
}
void TextRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TextRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:social_network_grpc.TextRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  carrier_.Clear();
  text_.ClearToEmpty();
  req_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TextRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 req_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          req_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string text = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_text();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "social_network_grpc.TextRequest.text"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> carrier = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&carrier_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TextRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:social_network_grpc.TextRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 req_id = 1;
  if (this->_internal_req_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_req_id(), target);
  }

  // string text = 2;
  if (!this->_internal_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "social_network_grpc.TextRequest.text");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_text(), target);
  }

  // map<string, string> carrier = 3;
  if (!this->_internal_carrier().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "social_network_grpc.TextRequest.CarrierEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "social_network_grpc.TextRequest.CarrierEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_carrier().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_carrier().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_carrier().begin();
          it != this->_internal_carrier().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = TextRequest_CarrierEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_carrier().begin();
          it != this->_internal_carrier().end(); ++it) {
        target = TextRequest_CarrierEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:social_network_grpc.TextRequest)
  return target;
}

size_t TextRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:social_network_grpc.TextRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> carrier = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_carrier_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_carrier().begin();
      it != this->_internal_carrier().end(); ++it) {
    total_size += TextRequest_CarrierEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string text = 2;
  if (!this->_internal_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  // int64 req_id = 1;
  if (this->_internal_req_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_req_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TextRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TextRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TextRequest::GetClassData() const { return &_class_data_; }

void TextRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TextRequest *>(to)->MergeFrom(
      static_cast<const TextRequest &>(from));
}


void TextRequest::MergeFrom(const TextRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:social_network_grpc.TextRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  carrier_.MergeFrom(from.carrier_);
  if (!from._internal_text().empty()) {
    _internal_set_text(from._internal_text());
  }
  if (from._internal_req_id() != 0) {
    _internal_set_req_id(from._internal_req_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TextRequest::CopyFrom(const TextRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:social_network_grpc.TextRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextRequest::IsInitialized() const {
  return true;
}

void TextRequest::InternalSwap(TextRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  carrier_.InternalSwap(&other->carrier_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &text_, lhs_arena,
      &other->text_, rhs_arena
  );
  swap(req_id_, other->req_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TextRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_social_5fnetwork_2eproto_getter, &descriptor_table_social_5fnetwork_2eproto_once,
      file_level_metadata_social_5fnetwork_2eproto[1]);
}

// ===================================================================

class UserMention::_Internal {
 public:
};

UserMention::UserMention(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:social_network_grpc.UserMention)
}
UserMention::UserMention(const UserMention& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_username(), 
      GetArenaForAllocation());
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:social_network_grpc.UserMention)
}

inline void UserMention::SharedCtor() {
username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
user_id_ = int64_t{0};
}

UserMention::~UserMention() {
  // @@protoc_insertion_point(destructor:social_network_grpc.UserMention)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UserMention::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UserMention::ArenaDtor(void* object) {
  UserMention* _this = reinterpret_cast< UserMention* >(object);
  (void)_this;
}
void UserMention::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UserMention::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UserMention::Clear() {
// @@protoc_insertion_point(message_clear_start:social_network_grpc.UserMention)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmpty();
  user_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserMention::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string username = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "social_network_grpc.UserMention.username"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserMention::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:social_network_grpc.UserMention)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_user_id(), target);
  }

  // string username = 2;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "social_network_grpc.UserMention.username");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_username(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:social_network_grpc.UserMention)
  return target;
}

size_t UserMention::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:social_network_grpc.UserMention)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 2;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserMention::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UserMention::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserMention::GetClassData() const { return &_class_data_; }

void UserMention::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UserMention *>(to)->MergeFrom(
      static_cast<const UserMention &>(from));
}


void UserMention::MergeFrom(const UserMention& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:social_network_grpc.UserMention)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _internal_set_username(from._internal_username());
  }
  if (from._internal_user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserMention::CopyFrom(const UserMention& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:social_network_grpc.UserMention)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserMention::IsInitialized() const {
  return true;
}

void UserMention::InternalSwap(UserMention* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &username_, lhs_arena,
      &other->username_, rhs_arena
  );
  swap(user_id_, other->user_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UserMention::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_social_5fnetwork_2eproto_getter, &descriptor_table_social_5fnetwork_2eproto_once,
      file_level_metadata_social_5fnetwork_2eproto[2]);
}

// ===================================================================

class Url::_Internal {
 public:
};

Url::Url(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:social_network_grpc.Url)
}
Url::Url(const Url& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  shortened_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    shortened_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_shortened_url().empty()) {
    shortened_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_shortened_url(), 
      GetArenaForAllocation());
  }
  expanded_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    expanded_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_expanded_url().empty()) {
    expanded_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_expanded_url(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:social_network_grpc.Url)
}

inline void Url::SharedCtor() {
shortened_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  shortened_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
expanded_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  expanded_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Url::~Url() {
  // @@protoc_insertion_point(destructor:social_network_grpc.Url)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Url::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  shortened_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  expanded_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Url::ArenaDtor(void* object) {
  Url* _this = reinterpret_cast< Url* >(object);
  (void)_this;
}
void Url::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Url::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Url::Clear() {
// @@protoc_insertion_point(message_clear_start:social_network_grpc.Url)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shortened_url_.ClearToEmpty();
  expanded_url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Url::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string shortened_url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_shortened_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "social_network_grpc.Url.shortened_url"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string expanded_url = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_expanded_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "social_network_grpc.Url.expanded_url"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Url::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:social_network_grpc.Url)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string shortened_url = 1;
  if (!this->_internal_shortened_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_shortened_url().data(), static_cast<int>(this->_internal_shortened_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "social_network_grpc.Url.shortened_url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_shortened_url(), target);
  }

  // string expanded_url = 2;
  if (!this->_internal_expanded_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_expanded_url().data(), static_cast<int>(this->_internal_expanded_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "social_network_grpc.Url.expanded_url");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_expanded_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:social_network_grpc.Url)
  return target;
}

size_t Url::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:social_network_grpc.Url)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string shortened_url = 1;
  if (!this->_internal_shortened_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_shortened_url());
  }

  // string expanded_url = 2;
  if (!this->_internal_expanded_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_expanded_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Url::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Url::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Url::GetClassData() const { return &_class_data_; }

void Url::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Url *>(to)->MergeFrom(
      static_cast<const Url &>(from));
}


void Url::MergeFrom(const Url& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:social_network_grpc.Url)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_shortened_url().empty()) {
    _internal_set_shortened_url(from._internal_shortened_url());
  }
  if (!from._internal_expanded_url().empty()) {
    _internal_set_expanded_url(from._internal_expanded_url());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Url::CopyFrom(const Url& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:social_network_grpc.Url)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Url::IsInitialized() const {
  return true;
}

void Url::InternalSwap(Url* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &shortened_url_, lhs_arena,
      &other->shortened_url_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &expanded_url_, lhs_arena,
      &other->expanded_url_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Url::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_social_5fnetwork_2eproto_getter, &descriptor_table_social_5fnetwork_2eproto_once,
      file_level_metadata_social_5fnetwork_2eproto[3]);
}

// ===================================================================

class TextResult::_Internal {
 public:
};

TextResult::TextResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  user_mentions_(arena),
  urls_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:social_network_grpc.TextResult)
}
TextResult::TextResult(const TextResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      user_mentions_(from.user_mentions_),
      urls_(from.urls_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    text_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text().empty()) {
    text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_text(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:social_network_grpc.TextResult)
}

inline void TextResult::SharedCtor() {
text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  text_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TextResult::~TextResult() {
  // @@protoc_insertion_point(destructor:social_network_grpc.TextResult)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void TextResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  text_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TextResult::ArenaDtor(void* object) {
  TextResult* _this = reinterpret_cast< TextResult* >(object);
  (void)_this;
}
void TextResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TextResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TextResult::Clear() {
// @@protoc_insertion_point(message_clear_start:social_network_grpc.TextResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_mentions_.Clear();
  urls_.Clear();
  text_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TextResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_text();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "social_network_grpc.TextResult.text"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .social_network_grpc.UserMention user_mentions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_user_mentions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .social_network_grpc.Url urls = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_urls(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TextResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:social_network_grpc.TextResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "social_network_grpc.TextResult.text");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_text(), target);
  }

  // repeated .social_network_grpc.UserMention user_mentions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_user_mentions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_user_mentions(i), target, stream);
  }

  // repeated .social_network_grpc.Url urls = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_urls_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_urls(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:social_network_grpc.TextResult)
  return target;
}

size_t TextResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:social_network_grpc.TextResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .social_network_grpc.UserMention user_mentions = 2;
  total_size += 1UL * this->_internal_user_mentions_size();
  for (const auto& msg : this->user_mentions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .social_network_grpc.Url urls = 3;
  total_size += 1UL * this->_internal_urls_size();
  for (const auto& msg : this->urls_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string text = 1;
  if (!this->_internal_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TextResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TextResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TextResult::GetClassData() const { return &_class_data_; }

void TextResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TextResult *>(to)->MergeFrom(
      static_cast<const TextResult &>(from));
}


void TextResult::MergeFrom(const TextResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:social_network_grpc.TextResult)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  user_mentions_.MergeFrom(from.user_mentions_);
  urls_.MergeFrom(from.urls_);
  if (!from._internal_text().empty()) {
    _internal_set_text(from._internal_text());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TextResult::CopyFrom(const TextResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:social_network_grpc.TextResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextResult::IsInitialized() const {
  return true;
}

void TextResult::InternalSwap(TextResult* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  user_mentions_.InternalSwap(&other->user_mentions_);
  urls_.InternalSwap(&other->urls_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &text_, lhs_arena,
      &other->text_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata TextResult::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_social_5fnetwork_2eproto_getter, &descriptor_table_social_5fnetwork_2eproto_once,
      file_level_metadata_social_5fnetwork_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace social_network_grpc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::social_network_grpc::TextRequest_CarrierEntry_DoNotUse* Arena::CreateMaybeMessage< ::social_network_grpc::TextRequest_CarrierEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::social_network_grpc::TextRequest_CarrierEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::social_network_grpc::TextRequest* Arena::CreateMaybeMessage< ::social_network_grpc::TextRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::social_network_grpc::TextRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::social_network_grpc::UserMention* Arena::CreateMaybeMessage< ::social_network_grpc::UserMention >(Arena* arena) {
  return Arena::CreateMessageInternal< ::social_network_grpc::UserMention >(arena);
}
template<> PROTOBUF_NOINLINE ::social_network_grpc::Url* Arena::CreateMaybeMessage< ::social_network_grpc::Url >(Arena* arena) {
  return Arena::CreateMessageInternal< ::social_network_grpc::Url >(arena);
}
template<> PROTOBUF_NOINLINE ::social_network_grpc::TextResult* Arena::CreateMaybeMessage< ::social_network_grpc::TextResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::social_network_grpc::TextResult >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
